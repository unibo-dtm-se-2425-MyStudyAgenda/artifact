<TaskItem>:
    size_hint_y: None
    height: self.minimum_height
    padding: 10
    spacing: 12
    canvas.before:
        Color:
            rgba: 0.96, 0.96, 0.96, 1
        Rectangle:
            pos: self.pos
            size: self.size

    GridLayout:
        cols: 6
        size_hint_y: None
        height: self.minimum_height
        width: self.parent.width if self.parent else 1
        spacing: 15

        CheckBox:
            active: root.is_completed
            on_active: root.on_checkbox_active(self, self.active)
            color: 0, 0, 0, 1
            size_hint_x: 1

        Label:
            text: root.description
            color: 0, 0, 0, 1
            text_size: self.size
            halign: "center"
            valign: "middle"
            size_hint_x: 1

        Label:
            text: root.topic
            color: 0, 0, 0, 1
            text_size: self.size
            halign: "center"
            valign: "middle"
            size_hint_x: 1

        Label:
            text: root.priority
            color:
                (0, 0.8, 0, 1) if root.priority == "Low" else \
                (1, 0.65, 0, 1) if root.priority == "Medium" else \
                (1, 0, 0, 1)
            text_size: self.size
            halign: "center"
            valign: "middle"
            size_hint_x: 1

        MDRaisedButton:
            text: "Schedule"
            on_release: root.open_schedule_popup()
            size_hint_x: 1

        MDRaisedButton:
            text: "Delete"
            md_bg_color: 1, 0, 0, 1
            on_release: root.delete_task()
            size_hint_x: 1

<SchedulePopup>:
    title: "Schedule Task"
    title_color: 0, 0, 0, 1
    title_align: "center"
    size_hint: 0.7, 0.5
    auto_dismiss: True
    background_color: 1, 1, 1, 1
    background: ""

    BoxLayout:
        orientation: "vertical"
        spacing: "10dp"
        padding: "10dp"

        Button:
            id: date_btn
            text: "Date: " + (root.task_item.selected_date if root.task_item and root.task_item.selected_date else "Select")
            color: 0.13, 0.59, 0.95, 1
            background_color: 1, 1, 1, 1
            background_normal: ""
            on_release: root.open_date_picker(self)

        Button:
            id: start_btn
            text: "Start: " + (root.task_item.start_time if root.task_item and root.task_item.start_time else "Select")
            color: 0.13, 0.59, 0.95, 1
            background_color: 1, 1, 1, 1
            background_normal: ""
            on_release: root.open_time_picker("start", self)

        Button:
            id: end_btn
            text: "End: " + (root.task_item.end_time if root.task_item and root.task_item.end_time else "Select")
            color: 0.13, 0.59, 0.95, 1
            background_color: 1, 1, 1, 1
            background_normal: ""
            on_release: root.open_time_picker("end", self)

        Button:
            text: "Save"
            background_color: 0.13, 0.59, 0.95, 1
            background_normal: ""
            on_release: root.save_schedule()
