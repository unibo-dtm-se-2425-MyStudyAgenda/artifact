<TaskItem>:
    size_hint_y: None
    height: "50dp"
    padding: [5, 5]
    canvas.before:
        Color:
            rgba: 0, 0, 0, 1
        Rectangle:
            pos: self.pos
            size: self.size
        Color:
            rgba: 0, 0, 0, 1
        Line:
            width: 1
            rectangle: (*self.pos, *self.size)

    GridLayout:
        cols: 6
        spacing: 10

        CheckBox:
            active: root.is_completed
            on_active: root.on_checkbox_active(self, self.active)

        Label:
            text: "[b]"+root.description+"[/b]"
            font_size: sp(16)
            markup: True
            valign: "middle"
            halign: "center"
        
        Label:
            text: root.topic
            font_size: sp(16)
            markup: True
            valign: "middle"
            halign: "center"

        Label:
            text: root.priority
            font_size: sp(16)
            color:
                (0, 1, 0, 1) if root.priority == "Low" else \
                (1, 0.65, 0, 1) if root.priority == "Medium" else \
                (1, 0, 0, 1)
        
        Button:
            text: "Schedule"
            font_size: sp(14)
            background_color: 0, 0, 0, 1
            on_release: root.open_schedule_popup()

        Button:
            text: "Delete"
            font_size: sp(14)
            color: 1, 0, 0, 1
            background_color: 0, 0, 0, 1
            on_release: root.delete_task()

<SchedulePopup>:
    title: "Schedule Task"
    size_hint: 0.7, 0.5
    auto_dismiss: True

    BoxLayout:
        orientation: "vertical"
        spacing: "10dp"
        padding: "10dp"

        MDFlatButton:
            id: date_btn
            text: "Date: " + (root.task_item.selected_date if root.task_item and root.task_item.selected_date else "Select")
            on_release: root.open_date_picker(self)

        MDFlatButton:
            id: start_btn
            text: "Start: " + (root.task_item.start_time if root.task_item and root.task_item.start_time else "Select")
            on_release: root.open_time_picker("start", self)

        MDFlatButton:
            id: end_btn
            text: "End: " + (root.task_item.end_time if root.task_item and root.task_item.end_time else "Select")
            on_release: root.open_time_picker("end", self)

        MDFlatButton:
            text: "Save"
            on_release: root.save_schedule()
